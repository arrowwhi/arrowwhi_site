{{template "base" .}}

{{define "main"}}
<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
    }

    .chat_body {
        display: flex;

    }

    .sidebar {
        background-color: #f2f2f2;
        height: 100vh;
        width: 150px;
        padding: 10px;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        justify-content: normal;
    }

    .message_list {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        height: 300px; /* Укажите высоту контейнера, чтобы было видно эффект */
    }

    .input_zone {
        display: flex;

    }

    .user_lnk {
        margin: 5px 0;
        padding: 5px;
        border-radius: 5px;
        background-color: #4CAF50;
        color: white;
    }
</style>

<div class = "chat_body">
    <div class="sidebar">
        {{range .logins}}
        <div class="user_lnk">
            <a href="#">{{.}}</a>
        </div>
        {{end}}
    </div>
    <div class="active_zone">
        <div id="message_list" class="message_list">
            <div class="message">
                <strong><a href="#user">Вася</a>:</strong>
                <span>Фсем чмоке ф этам чяте</span>
            </div>
            <div class="message">
                <strong><a href="#user">Вова</a>:</strong>
                <span>Я идиот убейте меня кто-нибудь</span>
            </div>
<!--            ...-->
        </div>
        <div class="input_zone">
            <label for="chat_input">
                <input type="text" class="chat_input" id="chat_input" placeholder="вводить текст сюда" />
                <input id="send" type="submit" />
            </label>
        </div>
    </div>
</div>

<script>
    const input = document.getElementById("chat_input");
    const output = document.getElementById("message_list");
    let message_to = "0";
    let ws;
    let single_message = {
        "message": "",
        "user_to": message_to,
    }

    // Функция для создания структуры тегов
    function createMessage(author, messageText) {
        const messageDiv = document.createElement("div");
        messageDiv.classList.add("message");

        const strongElement = document.createElement("strong");
        const authorLink = document.createElement("a");
        authorLink.href = "#user";
        authorLink.textContent = author;
        strongElement.appendChild(authorLink);

        const spanElement = document.createElement("span");
        spanElement.textContent = messageText;

        messageDiv.appendChild(strongElement);
        messageDiv.appendChild(spanElement);

        return messageDiv;
    }

    const print = function (author, message) {
        // const d = document.createElement("div");
        // d.textContent = message;
        const d = createMessage(author, message)
        output.appendChild(d);
        output.scroll(0, output.scrollHeight);
    };

    document.addEventListener('DOMContentLoaded', function(evt) {
        if (ws) {
            return false;
        }
        ws = new WebSocket("{{.chatId}}");
        ws.onopen = function(evt) {
            print("","OPEN");
        }
        ws.onclose = function(evt) {
            print("","CLOSE");
            ws = null;
        }
        ws.onmessage = function(evt) {
            const struct = JSON.parse(evt.data);
            print(struct.user_from + ": ", struct.message);
        }
        ws.onerror = function(evt) {
            print("","ERROR: " + evt.data);
        }
        return false;
    });

    document.getElementById("send").onclick = function(evt) {
        if (!ws) {
            return false;
        }
        single_message.message = input.value;
        print("","SEND: " + JSON.stringify(single_message));
        ws.send(JSON.stringify(single_message));
        return false;
    };

</script>


{{end}}